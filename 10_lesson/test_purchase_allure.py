import time
import pytest
import allure
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.webdriver import WebDriver
from typing import Generator


# === –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ===
@allure.epic("Web UI –¢–µ—Å—Ç—ã")
@allure.feature("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ø–æ–∫—É–ø–∫–∞")
class LoginPage:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
    """

    def __init__(self, driver: WebDriver) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.

        :param driver: –≠–∫–∑–µ–º–ø–ª—è—Ä –≤–µ–±-–¥—Ä–∞–π–≤–µ—Ä–∞ Chrome.
        """
        self.driver = driver
        self.url: str = "https://www.saucedemo.com/"

    @allure.step("–û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    def open(self) -> None:
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
        """
        self.driver.get(self.url)
        print("‚úÖ –û—Ç–∫—Ä—ã—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")

    @allure.step("–í–≤–æ–¥ –ª–æ–≥–∏–Ω–∞: {username}")
    def enter_username(self, username: str) -> None:
        """
        –í–≤–æ–¥–∏—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞.

        :param username: –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—Ä–æ–∫–∞).
        """
        username_field = WebDriverWait(self.driver, 15).until(
            EC.presence_of_element_located((By.ID, "user-name"))
        )
        username_field.clear()
        username_field.send_keys(username)

    @allure.step("–í–≤–æ–¥ –ø–∞—Ä–æ–ª—è")
    def enter_password(self, password: str) -> None:
        """
        –í–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞.

        :param password: –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—Ä–æ–∫–∞).
        """
        password_field = WebDriverWait(self.driver, 15).until(
            EC.presence_of_element_located((By.ID, "password"))
        )
        password_field.clear()
        password_field.send_keys(password)

    @allure.step("–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ Login")
    def click_login(self) -> None:
        """
        –ù–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞ —Å –ø–∞—É–∑–æ–π 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –Ω–∞–∂–∞—Ç–∏–µ–º.
        """
        print("‚è≥ –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º...")
        time.sleep(2)

        login_button = WebDriverWait(self.driver, 15).until(
            EC.element_to_be_clickable((By.ID, "login-button"))
        )
        login_button.click()
        print("‚úÖ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Login")
        time.sleep(10)


# === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–∞–≥–∞–∑–∏–Ω–∞ ===
class InventoryPage:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π —Ç–æ–≤–∞—Ä–æ–≤.
    """

    def __init__(self, driver: WebDriver) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–æ–≤.

        :param driver: –≠–∫–∑–µ–º–ø–ª—è—Ä –≤–µ–±-–¥—Ä–∞–π–≤–µ—Ä–∞ Chrome.
        """
        self.driver = driver

    @allure.step("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ Sauce Labs Backpack –≤ –∫–æ—Ä–∑–∏–Ω—É")
    def add_backpack_to_cart(self) -> None:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Ä—é–∫–∑–∞–∫ –≤ –∫–æ—Ä–∑–∏–Ω—É.
        """
        add_button = WebDriverWait(self.driver, 15).until(
            EC.element_to_be_clickable((By.ID, "add-to-cart-sauce-labs-backpack"))
        )
        add_button.click()
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω Sauce Labs Backpack")
        time.sleep(2)

    @allure.step("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ Sauce Labs Bolt T-Shirt –≤ –∫–æ—Ä–∑–∏–Ω—É")
    def add_bolt_tshirt_to_cart(self) -> None:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç —Ñ—É—Ç–±–æ–ª–∫—É –≤ –∫–æ—Ä–∑–∏–Ω—É.
        """
        add_button = WebDriverWait(self.driver, 15).until(
            EC.element_to_be_clickable((By.ID, "add-to-cart-sauce-labs-bolt-t-shirt"))
        )
        add_button.click()
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω Sauce Labs Bolt T-Shirt")
        time.sleep(2)

    @allure.step("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ Sauce Labs Onesie –≤ –∫–æ—Ä–∑–∏–Ω—É")
    def add_onesie_to_cart(self) -> None:
        """
        –î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–º–±–∏–Ω–µ–∑–æ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É.
        """
        add_button = WebDriverWait(self.driver, 15).until(
            EC.element_to_be_clickable((By.ID, "add-to-cart-sauce-labs-onesie"))
        )
        add_button.click()
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω Sauce Labs Onesie")
        time.sleep(2)

    @allure.step("–ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É")
    def go_to_cart(self) -> None:
        """
        –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∏–∫–æ–Ω–∫—É.
        """
        cart_link = WebDriverWait(self.driver, 15).until(
            EC.element_to_be_clickable((By.CLASS_NAME, "shopping_cart_link"))
        )
        cart_link.click()
        print("üõí –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É")
        time.sleep(2)


# === –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ—Ä–∑–∏–Ω—ã ===
class CartPage:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ—Ä–∑–∏–Ω–æ–π.
    """

    def __init__(self, driver: WebDriver) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ—Ä–∑–∏–Ω—ã.

        :param driver: –≠–∫–∑–µ–º–ø–ª—è—Ä –≤–µ–±-–¥—Ä–∞–π–≤–µ—Ä–∞ Chrome.
        """
        self.driver = driver

    @allure.step("–ü—Ä–æ–≤–µ—Ä–∫–∞: –≤ –∫–æ—Ä–∑–∏–Ω–µ 3 —Ç–æ–≤–∞—Ä–∞")
    def verify_cart_has_three_items(self) -> None:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤ –∫–æ—Ä–∑–∏–Ω–µ —Ä–æ–≤–Ω–æ 3 —Ç–æ–≤–∞—Ä–∞.
        """
        items = self.driver.find_elements(By.CLASS_NAME, "cart_item")
        with allure.step(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤: –æ–∂–∏–¥–∞–µ—Ç—Å—è 3, –Ω–∞–π–¥–µ–Ω–æ {len(items)}"):
            assert len(items) == 3, f"–û–∂–∏–¥–∞–ª–æ—Å—å 3 —Ç–æ–≤–∞—Ä–∞, –Ω–∞–π–¥–µ–Ω–æ: {len(items)}"
        print("‚úÖ –í –∫–æ—Ä–∑–∏–Ω–µ 3 —Ç–æ–≤–∞—Ä–∞")

    @allure.step("–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ Checkout")
    def click_checkout(self) -> None:
        """
        –ù–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
        """
        checkout_button = WebDriverWait(self.driver, 15).until(
            EC.element_to_be_clickable((By.ID, "checkout"))
        )
        checkout_button.click()
        print("‚úÖ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Checkout")


# === –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ ===
class CheckoutPage:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
    """

    def __init__(self, driver: WebDriver) -> None:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è.

        :param driver: –≠–∫–∑–µ–º–ø–ª—è—Ä –≤–µ–±-–¥—Ä–∞–π–≤–µ—Ä–∞ Chrome.
        """
        self.driver = driver

    @allure.step("–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    def fill_personal_info(self, first_name: str, last_name: str, postal_code: str) -> None:
        """
        –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

        :param first_name: –ò–º—è.
        :param last_name: –§–∞–º–∏–ª–∏—è.
        :param postal_code: –ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å.
        """
        WebDriverWait(self.driver, 15).until(
            EC.presence_of_element_located((By.ID, "first-name"))
        ).send_keys(first_name)

        self.driver.find_element(By.ID, "last-name").send_keys(last_name)
        self.driver.find_element(By.ID, "postal-code").send_keys(postal_code)

        continue_button = self.driver.find_element(By.ID, "continue")
        continue_button.click()
        print("‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã")

    @allure.step("–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã")
    def get_total_amount(self) -> float:
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.

        :return: –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∫–∞–∫ —á–∏—Å–ª–æ (float).
        """
        total_element = WebDriverWait(self.driver, 15).until(
            EC.presence_of_element_located((By.CLASS_NAME, "summary_total_label"))
        )
        total_text = total_element.text.strip()  # –ü—Ä–∏–º–µ—Ä: "Total: $58.29"
        return float(total_text.replace("Total: $", ""))


# === –§–∏–∫—Å—Ç—É—Ä–∞: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Chrome ===
@pytest.fixture
def driver() -> Generator[WebDriver, None, None]:
    """
    –§–∏–∫—Å—Ç—É—Ä–∞: —Å–æ–∑–¥–∞—ë—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä Chrome-–¥—Ä–∞–π–≤–µ—Ä–∞.

    :yield: –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä WebDriver.
    """
    options = Options()
    options.add_argument("--start-maximized")
    options.add_argument("--disable-blink-features=AutomationControlled")
    options.add_argument("--disable-infobars")
    options.add_argument("--disable-extensions")
    options.add_argument("--disable-plugins-discovery")
    options.add_argument("--disable-notifications")
    options.add_argument("--no-first-run")
    options.add_argument("--no-default-browser-check")
    options.add_argument("--disable-web-security")
    options.add_argument("--allow-running-insecure-content")
    options.add_argument(
        "user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36"
    )

    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option("useAutomationExtension", False)

    driver = webdriver.Chrome(options=options)
    driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => false});")

    yield driver
    driver.quit()


# === –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç ===
@allure.title("–ü–æ–∫—É–ø–∫–∞ —Ç—Ä—ë—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã")
@allure.description("""
–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:
1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä—ë—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É.
3. –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.
4. –ü—Ä–æ–≤–µ—Ä–∫—É –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
""")
@allure.feature("–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞")
@allure.severity(allure.severity_level.CRITICAL)
def test_purchase_three_items_and_verify_total(driver: WebDriver) -> None:
    """
    –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç: –ø–æ–∫—É–ø–∫–∞ —Ç—Ä—ë—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã.

    :param driver: –≠–∫–∑–µ–º–ø–ª—è—Ä –≤–µ–±-–¥—Ä–∞–π–≤–µ—Ä–∞ Chrome.
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞: –ø–æ–∫—É–ø–∫–∞ —Ç—Ä—ë—Ö —Ç–æ–≤–∞—Ä–æ–≤")

    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü
    login_page = LoginPage(driver)
    inventory_page = InventoryPage(driver)
    cart_page = CartPage(driver)
    checkout_page = CheckoutPage(driver)

    # === 1. –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç ===
    login_page.open()

    # === 2. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è ===
    login_page.enter_username("standard_user")
    login_page.enter_password("secret_sauce")
    login_page.click_login()

    # === 3. –î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∏ —Ç–æ–≤–∞—Ä–∞ ===
    inventory_page.add_backpack_to_cart()
    inventory_page.add_bolt_tshirt_to_cart()
    inventory_page.add_onesie_to_cart()

    # === 4. –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É ===
    inventory_page.go_to_cart()

    # === 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –∏ –Ω–∞–∂–∞—Ç—å Checkout ===
    cart_page.verify_cart_has_three_items()
    cart_page.click_checkout()

    # === 6. –ó–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É ===
    checkout_page.fill_personal_info("–ò–≤–∞–Ω", "–ò–≤–∞–Ω–æ–≤", "123456")

    # === 7. –ü–æ–ª—É—á–∏—Ç—å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏—Ç–æ–≥–æ–≤—É—é —Å—É–º–º—É ===
    total = checkout_page.get_total_amount()
    print(f"üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: ${total}")

    with allure.step(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã: –æ–∂–∏–¥–∞–µ—Ç—Å—è $58.29, –ø–æ–ª—É—á–µ–Ω–æ ${total}"):
        assert abs(total - 58.29) < 0.01, f"–û–∂–∏–¥–∞–ª–æ—Å—å $58.29, –ø–æ–ª—É—á–µ–Ω–æ: ${total}"
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω: –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –≤–µ—Ä–Ω–∞ ‚Äî $58.29")